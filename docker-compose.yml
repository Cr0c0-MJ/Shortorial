version: "3.8"
volumes:
  letsdance-volume:
    external: true
    name: letsdance-volume
  letsdance-jenkins-volume:
    external: true
    name: letsdance-jenkins-volume
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  redis_volume:
  redis_data:
services:
  letsdance_nginx_proxy_manager:
    container_name: letsdance-nginx-proxy-manager-container
    image: "jc21/nginx-proxy-manager:2.11.1"
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8009:81"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    environment:
      TZ: Asia/Seoul
      DISABLE_IPV6: "true"
  letsdance_mysql:
    container_name: letsdance-mysql-container
    image: mysql:8.0.30
    ports:
      - "3306:3306"
    volumes:
      - letsdance-volume:/var/lib/mysql
    environment:
      TZ: Asia/Seoul
      MYSQL_HOST: letsdance_mysql
      MYSQL_DATABASE: letsdance
      MYSQL_PORT: 3306
      MYSQL_ROOT_PASSWORD: b1234
    restart: always
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --character-set-client-handshake=FALSE
  letsdance_jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: letsdance-jenkins-container
    restart: always
    environment:
      - TZ=Asia/Seoul
    user: root
    privileged: true
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - letsdance-jenkins-volume:/var/jenkins_home
      - /home/ubuntu/docker-compose.yml:/docker-compose.yml
      - ./config/application-prod.yml:/config/application-prod.yml
      - ./config/react.env:/config/react.env
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
      - /var/run/docker.sock:/var/run/docker.sock
  letsdance_frontend:
    image: letsdance-frontend
    container_name: letsdance-frontend-container
    restart: always
    ports:
      - "80:80"
      - "3000:3000"
    environment:
      - TZ=Asia/Seoul
  letsdance_backend:
    image: letsdance-backend
    container_name: letsdance-backend-container
    ports:
      - "8089:8089"
    environment:
      - TZ=Asia/Seoul
  letsdance_sonarqube:
    image: sonarqube:lts-community
    ports:
      - "9000:9000"
    container_name: letsdance-sonarqube-container
    restart: always
    environment:
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonar
      - sonar.jdbc.username=b305
      - sonar.jdbc.password=b1234
      - TZ=Asia/Seoul
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
  letsdance_postgres:
    image: postgres:14.2
    ports:
      - "5432:5432"
    container_name: letsdance-postgres-container
    restart: always
    environment:
      - POSTGRES_USER=b305
      - POSTGRES_PASSWORD=b1234
      - POSTGRES_DB=letsdance
      - TZ=Asia/Seoul
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  letsdance_redis:
    image: redis:7.2
    container_name: letsdance-redis-container
    restart: always
    ports:
      - "6000:6379"
    volumes:
      - redis_data:/data
      - redis_volume:/usr/local/conf/redis.conf
    command: redis-server /usr/local/conf/redis.conf
    environment:
      - TZ=Asia/Seoul
      - REDIS_PASSWORD=b1234
  letsdance_node:
    image: letsdance-node
    container_name: letsdance-node-container
    ports:
      - "3001:3001"
    environment:
      - TZ=Asia/Seoul
  letsdance_flask:
    build: .
    image: letsdance-flask
    container_name: letsdance-flask-container
    restart: always
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
    volumes:
      - .:/app
    networks:
      - webnet
